{"version":3,"sources":["images/WeatherLogo.png","reducers/combineRed.js","reducers/reducer.js","store.js","httpGet/httpGet.js","actions/actions.js","components/componentsHeader/SelectCountries.js","components/componentsHeader/SelectSity.js","components/componentsHeader/Header.js","components/componentsMain/MyLocations.js","components/componentsMain/GneralInformationCity.js","components/componentsMain/ForecastDay.js","components/componentsMain/Forecast.js","components/componentsMain/WindPressure.js","components/componentsMain/Details.js","components/componentsMain/MyFancyComponent.js","components/componentsMain/Map.js","components/componentsMain/Main.js","components/componentsSearch/MyFavoritCitySearch.js","App.js","index.js"],"names":["module","exports","reducers","combineReducers","responseReducer","state","action","undefined","response","country","cities","city","status","type","Object","assign","payload","forecastReducer","forecastAll","timesOfDay","isLoading","localStorageReducer","localStorageList","localStorage","setItem","geoPositionReducer","position","store","createStore","composeWithDevTools","applyMiddleware","thunk","httpGet","url","query","oauth","Math","random","toString","substring","parseInt","Date","getTime","merged","$","extend","merged_arr","keys","sort","map","k","encodeURIComponent","signature_base_str","method","join","composite_key","signature","CryptoJS","HmacSHA1","enc","Base64","auth_header","ajax","param","headers","success","data","actionLocalStorage","getCities","dispatch","a","fetch","then","json","console","log","actionCityForecast","getWeatherForecast","result","sunrise","current_observation","astronomy","split","sunset","date","pubDate","splice","dateMilliseconds","sunriseDay","concat","sunsetDay","SelectCont","props","this","res","countries","key","push","label","String","value","className","placeholder","options","onChange","opt","actionCountrySel","Component","mapDispatchToProps","ConnectedSelectCountry","connect","SelectCity","setState","actionCitySel","ConnectedSelectCity","Header","src","require","alt","MyFavorites","getItem","arr","length","JSON","parse","some","x","location","stringify","newArr","filter","arrCity","onClick","btnMyGeoPosition","bind","btnAddCity","event","target","innerText","btnDeleteCity","MyLocations","InformationCity","time","slice","pop","info","urlImg","condition","code","dateis","text","forecasts","high","low","temperature","GneralInformationCity","ForecastDay","forecast","dateNow","getDate","dateDay","srcGet","ForecastAll","i","Forecast","PressureWind","num","floor","wind","speed","toFixed","degToCompass","direction","atmosphere","pressure","WindPressure","DetailsAll","srt","d","minutes","getMinutes","getHours","urlGif","chill","humidity","visibility","rising","Details","MyMapComponent","compose","withProps","googleMapURL","loadingElement","containerElement","mapElement","withScriptjs","withGoogleMap","defaultZoom","center","isMarkerShown","onMarkerClick","MyComponent","delayedShowMarker","setTimeout","handleMarkerClick","lat","Number","lng","long","MyFancyComponent","Map","Main","MyFavoritCitySearch","library","add","faHome","faLongArrowAltDown","App","LinkRouter","Router","history","createHistory","Link","to","icon","Switch","Route","exact","path","component","All","MyFavoritCity","ReactDOM","render","document","getElementById","subscribe","getState"],"mappings":"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","file":"static/js/main.32bed7fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/WeatherLogo.a5eb16ad.png\";","import { combineReducers } from 'redux';\r\nimport { responseReducer, forecastReducer, localStorageReducer, geoPositionReducer } from './reducer';\r\n\r\nconst reducers = combineReducers({ \r\n  responseReducer,\r\n  forecastReducer,\r\n  localStorageReducer,\r\n  geoPositionReducer \r\n});\r\n\r\nexport default reducers;","export let responseReducer = (state, action) => { \r\n    if (state === undefined){ \r\n        return {response: {}, country: '', cities: [], city: '', status: true}  \r\n    }\r\n    if (action.type === 'COUNTRIES_INC'){\r\n        return Object.assign({}, state, {response: action.payload})  \r\n    }\r\n    if (action.type === 'COUNTRIES_SELECT'){       \r\n        return Object.assign({}, state, {country: action.country, cities: action.payload, status: action.status}) \r\n    }\r\n    if (action.type === 'CITY_SELECT'){       \r\n        return Object.assign({}, state, {city: action.payload}) \r\n    }\r\n    return state;  \r\n};\r\n\r\nexport let forecastReducer = (state, action) => { \r\n    if (state === undefined){ \r\n        return {forecastAll: {}, timesOfDay: '', isLoading: true}  \r\n    }\r\n    if (action.type === 'CITYFORECAST_INC'){\r\n        return Object.assign({}, state, {forecastAll: action.payload, timesOfDay: action.timesOfDay, isLoading: false})  \r\n    }\r\n    return state;  \r\n};\r\n\r\nexport let localStorageReducer = (state, action) => { \r\n    if (state === undefined){\r\n        let localStorageList\r\n        if(localStorage['citiesFavoritList']) {\r\n            localStorageList =  localStorage['citiesFavoritList']   \r\n        } else {\r\n            localStorage.setItem('citiesFavoritList', '[]');\r\n            localStorageList = localStorage['citiesFavoritList'] \r\n        }\r\n         \r\n        \r\n        return {localStorageList: localStorageList}  \r\n    }\r\n    if (action.type === 'LOCALSTORAGE_INC'){\r\n        return Object.assign({}, state, {localStorageList: action.localStorageList})  \r\n    } \r\n    return state;  \r\n};\r\n\r\nexport let geoPositionReducer = (state, action) => { \r\n    if (state === undefined){ \r\n        return {position: {}}  \r\n    }\r\n    if (action.type === 'POSITION_INC'){\r\n        return Object.assign({}, state, {position: action.position})  \r\n    } \r\n    return state;  \r\n};","import {createStore, applyMiddleware} from 'redux';\r\nimport reducers from './reducers/combineRed'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import CryptoJS from 'crypto-js';\r\nimport $ from 'jquery';\r\n\r\nfunction httpGet(city){\r\n    var url = 'https://weather-ydn-yql.media.yahoo.com/forecastrss';\r\n    var method = 'GET';\r\n    var app_id = 'zzN3ZS38';\r\n    var consumer_key = 'dj0yJmk9V3lNMmtFTWdLZ2dmJmQ9WVdrOWVucE9NMXBUTXpnbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmc3Y9MCZ4PTlk';\r\n    var consumer_secret = '62428b89ab163526ee3ea1a81611971e03aa09a3';\r\n    var concat = '&';\r\n    var query = {'location': city, 'format': 'json', 'u':'c'};\r\n    var oauth = {\r\n        'oauth_consumer_key': consumer_key,\r\n        'oauth_nonce': Math.random().toString(36).substring(2),\r\n        'oauth_signature_method': 'HMAC-SHA1',\r\n        'oauth_timestamp': parseInt(new Date().getTime() / 1000).toString(),\r\n        'oauth_version': '1.0'\r\n    };\r\n\r\n    var merged = {}; \r\n    $.extend(merged, query, oauth);\r\n\r\n    // Note the sorting here is required\r\n    \r\n    var merged_arr = Object.keys(merged).sort().map(function(k) {\r\n      return [k + '=' + encodeURIComponent(merged[k])];\r\n    });\r\n    var signature_base_str = method\r\n      + concat + encodeURIComponent(url)\r\n      + concat + encodeURIComponent(merged_arr.join(concat));\r\n\r\n    var composite_key = encodeURIComponent(consumer_secret) + concat;\r\n    var hash = CryptoJS.HmacSHA1(signature_base_str, composite_key);\r\n    var signature = hash.toString(CryptoJS.enc.Base64);\r\n\r\n    oauth['oauth_signature'] = signature;\r\n    var auth_header = 'OAuth ' + Object.keys(oauth).map(function(k) {\r\n      return [k + '=\"' + oauth[k] + '\"'];\r\n    }).join(',');\r\nlet response = $.ajax({\r\n      url: url + '?' + $.param(query),\r\n      headers: {\r\n        'Authorization': auth_header,\r\n        'X-Yahoo-App-Id': app_id \r\n      },\r\n      method: 'GET',\r\n      success: function(data){\r\n        return data;\r\n      }\r\n    });\r\n    return response\r\n}\r\n\r\nexport default httpGet;\r\n","import httpGet from '../httpGet/httpGet';\r\n\r\n\r\nexport function actionLocalStorage(localStorageList){\r\n    localStorage.setItem('citiesFavoritList', localStorageList)\r\n    return {\r\n        type: 'LOCALSTORAGE_INC',\r\n        localStorageList\r\n    }\r\n};\r\n\r\nexport function getCities() {\r\n    return async function (dispatch){    \r\n        try { \r\n            await fetch(\"https://raw.githubusercontent.com/David-Haim/CountriesToCitiesJSON/master/countriesToCities.json\")\r\n                .then(response => {\r\n                    response.json().then( response => {\r\n                        dispatch(actionCountries(response))\r\n                   })\r\n                })\r\n        }      \r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n};\r\n\r\nexport  function actionGeoPosition(position){    \r\n    return {\r\n        type: 'POSITION_INC',\r\n        position\r\n    }\r\n};\r\n\r\nexport function actionCountries(payload){\r\n    return {\r\n        type: 'COUNTRIES_INC',\r\n        payload       \r\n    }\r\n};\r\n\r\nexport function actionCountrySel(country, cities){\r\n    return {\r\n        type: 'COUNTRIES_SELECT',\r\n        country: country,\r\n        payload: cities,\r\n        status: false       \r\n    }\r\n};\r\n\r\nexport function actionCitySel(city){\r\n    return {\r\n        type: 'CITY_SELECT',\r\n        payload: city,\r\n\r\n    }\r\n};\r\n\r\nexport function actionCityForecast(payload, timesOfDay){\r\n    return {\r\n        type: 'CITYFORECAST_INC',\r\n        payload,\r\n        timesOfDay\r\n    }\r\n};\r\n\r\nexport function getWeatherForecast(city) {\r\n    return async function (dispatch){    \r\n        try { \r\n            await httpGet(city)\r\n             .then(result => {                    \r\n                    let sunrise = result.current_observation.astronomy.sunrise.split(' ')\r\n                    let sunset = result.current_observation.astronomy.sunset.split(' ')\r\n                    let day = new Date(result.current_observation.pubDate*1000).toString().split(' ')\r\n                    let date = day.splice(1, 3)\r\n                    let dateMilliseconds = result.current_observation.pubDate*1000\r\n                    let sunriseDay = new Date(date.concat(sunrise).join(' ')).getTime()\r\n                    let sunsetDay =new Date(date.concat(sunset).join(' ')).getTime()\r\n                    let timesOfDay = sunriseDay <= dateMilliseconds && dateMilliseconds <=sunsetDay?  'd':'n';\r\n                    dispatch(actionCityForecast(result, timesOfDay))\r\n                })            \r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport Select from 'react-select';\r\nimport { connect } from 'react-redux'\r\nimport { getCities, actionCountrySel } from '../../actions/actions'\r\n\r\n\r\nclass SelectCont extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tisLoading:true\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getCities()\t\t\r\n\t}\r\n\r\n\trender() {\t\r\n\t\tif (!this.props.response) return (<p>Loading ... </p>)\r\n\t\tlet res = this.props.response\t\r\n        let countries = []\r\n        for(let key in res){countries.push({label: String(key), value:String(key)})}\r\n        return (\r\n\t\t\t<div className='select'>\t\r\n\t\t\t\t<Select placeholder=\"Select Country\" options={countries} onChange={opt => {let cities = this.props.response[opt.value];\r\n\t\t\t\t\tthis.props.actionCountrySel(opt.value, cities)}}  />\r\n\t\t\t</div>\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nlet mapStateToProps = state => ({response: state.responseReducer.response})  \r\nlet mapDispatchToProps = {getCities, actionCountrySel};     \r\n\r\n let ConnectedSelectCountry = connect(mapStateToProps,mapDispatchToProps)(SelectCont) \r\n\r\n export default ConnectedSelectCountry\r\n\r\n","import React, {Component} from 'react'\r\nimport Select from 'react-select';\r\nimport { connect } from 'react-redux'\r\nimport { actionCitySel, getWeatherForecast } from '../../actions/actions'\r\n\r\n\r\nclass SelectCity extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tstatus: true\t\t\t\r\n\t\t}\r\n\t}\r\n\tcomponentWillMount() {\r\n\t\tthis.props.getWeatherForecast(\"Kharkiv\")\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet cities = []\r\n\t\tlet res = this.props.cities\r\n\t\tfor(let key of res){cities.push({label: String(key), value:String(key)})}\r\n\t\tthis.setState.status = this.props.status\t\t \r\n\t\treturn (\r\n\t\t\t<div className='select'>\t\t\t\r\n\t\t\t\t<Select placeholder=\"Select city\" onChange={opt=>{this.props.actionCitySel(opt.value); this.props.getWeatherForecast(opt.value)}}  options={cities}/>\r\n\t\t\t</div>\t\t\t\t\t\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = state => ({cities: state.responseReducer.cities, status: state.responseReducer.status})  \r\nlet mapDispatchToProps = {actionCitySel, getWeatherForecast};\r\nlet ConnectedSelectCity = connect(mapStateToProps,mapDispatchToProps)(SelectCity) \r\n\r\nexport default ConnectedSelectCity\r\n\r\n","import React, {Component} from 'react'\r\nimport ConnectedSelectCountry from './SelectCountries'\r\nimport ConnectedSelectCity from './SelectSity'\r\n\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">            \r\n                <img className=\"logoImg\" src={require(\"../../images/WeatherLogo.png\")} alt=\"images/logo.png\"/>\r\n                \r\n                 <div className=\"search\">\r\n                    <ConnectedSelectCountry/>\r\n                    <ConnectedSelectCity/>\r\n                 </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actionLocalStorage, getWeatherForecast } from '../../actions/actions';\r\n\r\n\r\nclass MyFavorites extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading:true,\r\n            localStorageList:this.props.localStorageList  \r\n        }\r\n    };   \r\n    btnMyGeoPosition() {\r\n        this.props.getWeatherForecast(localStorage.getItem('myCity'))\r\n    };\r\n\r\n    btnAddCity() {\r\n        let arr = this.state.localStorageList.length !== 0 ? JSON.parse(this.state.localStorageList): [];\r\n        if (arr.some(x=> x===this.props.forecastAll.location.city)) return    \r\n        arr.push(this.props.forecastAll.location.city)\r\n        this.setState.localStorageList = JSON.stringify(arr)\r\n        this.props.actionLocalStorage(JSON.stringify(arr))\r\n    };\r\n    btnDeleteCity() {\r\n        let arr = JSON.parse(this.state.localStorageList)\r\n        let city = this.props.forecastAll.location.city\r\n        let  newArr = arr.filter(x=> x!==city)\r\n        this.setState.localStorageList = JSON.stringify(newArr)\r\n        this.props.actionLocalStorage(JSON.stringify(newArr))  \r\n    };\r\n\r\n    render() {\r\n        this.state.isLoading = this.props.isLoading\r\n        if(this.state.isLoading) return (<div><i className=\"fa fa-spinner fa-spin\"></i></div>)\r\n        \r\n        this.state.localStorageList = this.props.localStorageList\r\n        let arrCity =[]\r\n        if (this.state.localStorageList.length !== 0)  {arrCity = JSON.parse(this.state.localStorageList)} \r\n        \r\n        return (\r\n            <div className=\"myLocations\" key={Math.random()}>\r\n                <aside>\r\n                    <div className=\"favorit divh2\">\r\n                        <h2>My favorites places</h2>\r\n                    </div>\r\n                    <div className=\"divh2 myGeo\"><button className=\"btnLoc\" onClick={this.btnMyGeoPosition.bind(this)}>My geo position</button></div>\r\n                    <div>\r\n                        <p>Click the button to add cities to the list.</p>\r\n                        <div className=\"favorit\" key={Math.random()}>\r\n                           <div className=\"divh2\"><button className=\"btnLoc\" onClick={this.btnAddCity.bind(this)}>Add</button></div>\r\n                            <div className=\"favorit citiesList\" onClick = {(event)=> this.props.getWeatherForecast(event.target.innerText)}>{arrCity.map((x,)=> <p className=\"linkWorld\" key={Math.random()}>{x}</p>)}</div>\r\n                            <div className=\"divh2\"><button className=\"btnLoc\" onClick={this.btnDeleteCity.bind(this)}>Delete</button></div>\r\n                        </div>\r\n                        <div className=\"divh2\"><h2>Around the World</h2></div>\r\n                        <div className=\"citiesFavoritList\"></div>\r\n                        <div className=\"favorit citiesList\" onClick = {(event)=> this.props.getWeatherForecast(event.target.innerText)}>                        \r\n                            <p className=\"linkWorld\">New York</p>\r\n                            <p className=\"linkWorld\">Los Angeles</p>\r\n                            <p className=\"linkWorld\">Chicago</p>\r\n                            <p className=\"linkWorld\">Houston</p>\r\n                            <p className=\"linkWorld\">Philadelphia</p>\r\n                            <p className=\"linkWorld\">San Francisco</p>\r\n                            <p className=\"linkWorld\">Mexico City</p>\r\n                            <p className=\"linkWorld\">Tokyo</p>\r\n                            <p className=\"linkWorld\">Sao Paulo</p>\r\n                            <p className=\"linkWorld\">London</p>\r\n                            <p className=\"linkWorld\">Paris</p>\r\n                            <p className=\"linkWorld\">Venice</p>\r\n                        </div>\r\n                    </div>    \r\n                </aside>\r\n            </div>\r\n        )\r\n    }\r\n};\r\nlet mapStateToProps = state => ({forecastAll: state.forecastReducer.forecastAll, \r\n    timesOfDay: state.forecastReducer.timesOfDay, \r\n    isLoading: state.forecastReducer.isLoading,\r\n    localStorageList: state.localStorageReducer.localStorageList,\r\n    position:state.geoPositionReducer.position})  \r\nlet mapDispatchToProps = {actionLocalStorage, getWeatherForecast};     \r\n\r\n let MyLocations = connect(mapStateToProps,mapDispatchToProps)(MyFavorites); \r\n\r\n\r\n\r\n\r\nexport default MyLocations;","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getCities } from '../../actions/actions';\r\n\r\n\r\nclass InformationCity extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tisLoading:true\t\t\t\r\n\t\t} \r\n\t}\r\n\r\n\tdateis(time) { \r\n\t\tlet date = new Date().toString().split(' ').slice(0, 5)\r\n\t\tdate[4] = date[4].split(':')\r\n\t\tdate[4].pop()\r\n\t\tdate[4] =  date[4].join(':')\r\n\t\tdate = date[0]+' '+date[2]+' '+date[1]+' '+date[3]+' '+date[4]\r\n\t\treturn (date)\r\n\t}\r\n\r\n    render() {\r\n    \tthis.state.isLoading = this.props.isLoading\r\n    \tif(this.state.isLoading) return (<div><i className=\"fa fa-spinner fa-spin\"></i></div>)\r\n    \tlet info = this.props.forecastAll\r\n    \tlet urlImg = `https://s.yimg.com/zz/combo?a/i/us/nws/weather/gr/${info.current_observation.condition.code}${this.props.timesOfDay}.png`\r\n\t\treturn (\r\n            <div className=\"generalInformationCity\" key={Math.random()}>\r\n                <div className=\"city\">{info.location.city}</div>\r\n                <h2 className=\"country\">{info.location.country}</h2>\r\n                <p className=\"dateTime\">{this.dateis(info.current_observation.pubDate)}</p>\r\n                <p className=\"weatherCharacter\"><img src= {urlImg} alt=\"gif\"/>{info.current_observation.condition.text}</p>\r\n                <div className=\"tempHighLow\">\r\n\t                <div className=\"tempHigh\"><i className=\"fa fa-long-arrow-up\"></i>{info.forecasts[0].high}°</div>\r\n\t\t\t\t\t<div className=\"tempLow\"><i className=\"fa fa-long-arrow-down\"></i>{info.forecasts[0].low}°</div>\t\t\t\r\n                </div>\r\n\t\t\t\t<div className=\"temperatureIsNow\">{info.current_observation.condition.temperature}<span className=\"tempIsNowSpan\">°</span></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({forecastAll: state.forecastReducer.forecastAll, timesOfDay: state.forecastReducer.timesOfDay, isLoading: state.forecastReducer.isLoading})  \r\nlet mapDispatchToProps = {getCities};     \r\nlet GneralInformationCity = connect(mapStateToProps,mapDispatchToProps)(InformationCity) \r\n\r\nexport default GneralInformationCity\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\n\r\nclass ForecastDay extends Component {\r\n\r\n    srcGet(code) {\r\n        return `https://s.yimg.com/zz/combo?a/i/us/nws/weather/gr/${code}d.png`\r\n    }\r\n    render() {\r\n        let date = new Date(this.props.forecast.date*1000).toString().split(' ').slice(0, 4);\r\n        let dateNow = new Date(this.props.forecast.date*1000).getDate();\r\n        let dateDay = date[0]+' '+dateNow+' '+date[1]+' '+date[3];\r\n\r\n        return (\r\n            <div className=\"forecastDay\">\r\n                <div className=\"day\">{dateDay}</div>\r\n                <img className=\"forImg\" src={this.srcGet(this.props.forecast.code)} alt=\"gif\"/>  \r\n                <div className=\"forText\">{this.props.forecast.text}</div>\r\n                <div className=\"forHigh\">{this.props.forecast.high} </div>\r\n                <div className=\"forLow\">{this.props.forecast.low} </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ForecastDay;","import React, {Component} from 'react';\r\nimport ForecastDay from './ForecastDay';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ForecastAll extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true\t\t\t\r\n\t\t} \r\n\t}\r\n    render() {\r\n\t\tthis.state.isLoading = this.props.isLoading\r\n    \tif(this.state.isLoading) return (<div><i className=\"fa fa-spinner fa-spin\"></i></div>)\r\n        let info = this.props.forecastAll         \r\n\t\treturn (\r\n            <div className=\"forecast\"key={Math.random()}>\r\n                <div className=\"divh2\">\r\n                    <h2>Forecast</h2>                   \r\n                </div>\r\n                {info.forecasts.map((x, i) => <ForecastDay forecast={x} key={i}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({forecastAll: state.forecastReducer.forecastAll, isLoading: state.forecastReducer.isLoading});  \r\nlet mapDispatchToProps = {};\r\nlet Forecast = connect(mapStateToProps,mapDispatchToProps)(ForecastAll);\r\n\r\nexport default Forecast","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getCities } from '../../actions/actions';\r\n\r\n\r\nclass PressureWind extends Component {\r\n\t\tconstructor (props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tisLoading:true\t\t\t\r\n\t\t} \r\n\t};\r\n\r\n\tdegToCompass(num) {\r\n    \tlet val = Math.floor((num / 22.5) + 0.5);\r\n    \tlet arr = [\"N\", \"NNE\", \"NE\", \"ENE\", \"E\", \"ESE\", \"SE\", \"SSE\", \"S\", \"SSW\", \"SW\", \"WSW\", \"W\", \"WNW\", \"NW\", \"NNW\"];\r\n    \treturn arr[(val % 16)];\r\n\t};\r\n    render() {\r\n\t\tthis.state.isLoading = this.props.isLoading\r\n    \tif(this.state.isLoading) return (<div><i className=\"fa fa-spinner fa-spin\"></i></div>)\r\n\t\t\t\r\n    \tlet info = this.props.forecastAll\r\n    \t\r\n\t\r\n        return (\r\n            <div className=\"windPressure\">\r\n                <div className=\"divh2\">\r\n                \t<h2>Wind & Pressure</h2>\r\n                </div>\r\n                <div className=\"windPressureContent\">\r\n\t\t\t\t\t<div className=\"iconWind\">\t                \t\r\n\t\t                \t<div className=\"trsdu\"></div>\r\n\t\t                \t<div className=\"trsdu1\"></div>                \t\r\n\t\t                \t<div className=\"trsduSmall\"></div>\r\n\t\t                \t<div className=\"trsduSmall1\"></div>\r\n\t                </div>\r\n\t\t\t\t\t<div className=\"windPressureValue\">\r\n\t\t                <div className=\"wind\">Wind<br/>{(info.current_observation.wind.speed/1.61).toFixed(2)}km/h <br/>{this.degToCompass(info.current_observation.wind.direction)}</div>\r\n\t\t                <div className=\"pressure\">Barometer<br/>{(info.current_observation.atmosphere.pressure/33.42).toFixed(2)}millibars</div>\r\n\t            \t</div>\r\n\t            </div>                \r\n            </div>\r\n        );\r\n    }\r\n};\r\nlet mapStateToProps = state => ({forecastAll: state.forecastReducer.forecastAll, isLoading: state.forecastReducer.isLoading}); \r\nlet mapDispatchToProps = {getCities};     \r\nlet WindPressure = connect(mapStateToProps,mapDispatchToProps)(PressureWind); \r\n\r\nexport default WindPressure;","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {getCities} from '../../actions/actions'\r\n\r\n\r\nclass DetailsAll extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tisLoading:true\t\t\t\r\n\t\t} \r\n\t};\r\n\ttime(srt) {\r\n\t\tlet arr = srt.split(' ')\t\t\r\n\t\tlet d = new Date(\"1/1/2013 \" + arr[0] + ' '+ arr[1]);\r\n\t\tlet minutes = d.getMinutes()\r\n\t\tminutes = minutes<10? '0'+minutes: minutes;\r\n\t\tlet time = d.getHours() + ':' + minutes;\r\n\t\treturn (time)\r\n\t};\r\n\tdegToCompass(num) {\r\n    \tlet val = Math.floor((num / 22.5) + 0.5);\r\n    \tlet arr = [\"N\", \"NNE\", \"NE\", \"ENE\", \"E\", \"ESE\", \"SE\", \"SSE\", \"S\", \"SSW\", \"SW\", \"WSW\", \"W\", \"WNW\", \"NW\", \"NNW\"];\r\n    \treturn arr[(val % 16)];\r\n\t};\r\n\t\r\n    render() {\r\n    \tthis.state.isLoading = this.props.isLoading\r\n    \tif(this.state.isLoading) return (<div><i className=\"fa fa-spinner fa-spin\"></i></div>)\r\n    \tlet info = this.props.forecastAll\r\n    \tlet urlGif =  `https://s.yimg.com/zz/combo?a/i/us/nws/weather/gr/${info.current_observation.condition.code}${this.props.timesOfDay}.png`\r\n\t\r\n\t\treturn (\r\n            <div className=\"details\"  key={Math.random()}>               \r\n                <div className=\"divh2\">\r\n                 \t<h2>Details</h2>\r\n                </div>\r\n\t\t\t\t<div className=\"detAll\">\r\n\t\t\t\t\t<div className=\"detImg\">\r\n\t                 \t<img src= {urlGif} alt='gif'/>\r\n\t                </div>\r\n\t                <div className=\"detMain\">\r\n\t\t\t\t\t\t<div className=\"feelsLike\">\r\n\t\t\t\t\t\t\t<div className=\"\">Feels like</div>\r\n\t\t\t\t\t\t\t<div className=\"\">{((info.current_observation.wind.chill - 32)*5/9).toFixed()}°</div>\r\n\t\t\t\t\t\t</div>\t                \t\r\n\t\t\t\t\t\t<div className=\"humidity\">\r\n\t\t\t\t\t\t\t<div className=\"\">Humidity</div>\r\n\t\t\t\t\t\t\t<div className=\"\">{info.current_observation.atmosphere.humidity}%</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"visibility\">\r\n\t\t\t\t\t\t\t<div className=\"\">Visibility</div>\r\n\t\t\t\t\t\t\t<div className=\"\">{(info.current_observation.atmosphere.visibility/1.61).toFixed(2)}km</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"indexUV\">\r\n\t\t\t\t\t\t\t<div className=\"\">UV Index</div>\r\n\t\t\t\t\t\t\t<div className=\"\">{info.current_observation.atmosphere.rising}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"sunrise\">\r\n\t\t\t\t\t\t\t<div className=\"\">Sunrise</div>\r\n\t\t\t\t\t\t\t<div className=\"\">{this.time(info.current_observation.astronomy.sunrise)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"sunset\">\r\n\t\t\t\t\t\t\t<div className=\"\">Sunset</div>\r\n\t\t\t\t\t\t\t<div className=\"\">{this.time(info.current_observation.astronomy.sunset)}</div>\r\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        );\r\n    }\r\n};\r\nlet mapStateToProps = state => ({forecastAll: state.forecastReducer.forecastAll, timesOfDay: state.forecastReducer.timesOfDay, isLoading: state.forecastReducer.isLoading});  \r\nlet mapDispatchToProps = {getCities};\r\nlet Details = connect(mapStateToProps,mapDispatchToProps)(DetailsAll);\r\n\r\nexport default Details;","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose, withProps } from \"recompose\"\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\r\n\r\n\r\n\r\n\r\nconst MyMapComponent = compose(\r\n  withProps({\r\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?hl=en&v=3.exp&libraries=geometry,drawing,places\",\r\n    loadingElement: <div  className=\"loadingElement\"  />,\r\n    containerElement: <div className=\"containerElement\"  />,\r\n    mapElement: <div className=\"mapElement\"  />,\r\n  }),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)((props) =>\r\n  <GoogleMap\r\n    defaultZoom={4}\r\n    center= {props.center}\r\n  >\r\n    {props.isMarkerShown && <Marker position={props.center} onClick={props.onMarkerClick} />}\r\n  </GoogleMap>\r\n)\r\n\r\nclass MyComponent extends Component {\r\n \r\n  state = {\r\n    isLoading:true,\r\n  } \r\n\r\n  componentDidMount() {\r\n    this.delayedShowMarker()  \r\n  }\r\n\r\n  delayedShowMarker = () => {\r\n    setTimeout(() => {\r\n      this.setState({ isMarkerShown: true })\r\n    }, 3000)\r\n  }\r\n\r\n  handleMarkerClick = () => {\r\n    this.setState({ isMarkerShown: false })\r\n    this.delayedShowMarker()\r\n  }\r\n\r\n  render() {\r\n    this.state.isLoading = this.props.isLoading\r\n    if(this.state.isLoading) return (<div><i className=\"fa fa-spinner fa-spin\"></i></div>)\r\n    \r\n    return (      <MyMapComponent\r\n        isMarkerShown={this.state.isMarkerShown}\r\n        onMarkerClick={this.handleMarkerClick}\r\n        center={{ lat:Number(this.props.forecastAll.location.lat), lng:Number(this.props.forecastAll.location.long)}}\r\n      \r\n      />\r\n    )\r\n  }\r\n}\r\n \tlet mapStateToProps = state => ({forecastAll: state.forecastReducer.forecastAll, isLoading: state.forecastReducer.isLoading})  \r\n  let mapDispatchToProps = {};\r\n  let MyFancyComponent = connect(mapStateToProps,mapDispatchToProps)(MyComponent) \r\n\r\nexport default MyFancyComponent\r\n\r\n\r\n","import React from 'react';\r\nimport MyFancyComponent from './MyFancyComponent';\r\n\r\nconst Map = () => {   \r\n    return (\r\n        <div className=\"map\">                \r\n            <div className=\"divh2\">\r\n            <h2>Map</h2>\r\n            </div>\r\n            <MyFancyComponent/> \r\n        </div>\r\n    );\r\n    \r\n}\r\nexport default Map","import React from 'react';\r\nimport MyLocations from './MyLocations';\r\nimport GneralInformationCity from './GneralInformationCity';\r\nimport Forecast from './Forecast';\r\nimport WindPressure from './WindPressure';\r\nimport Details from './Details';\r\nimport Map from './Map.js';\r\n\r\nconst Main = () => {\r\n \r\n        return (\r\n            <div className=\"main\">\r\n                <MyLocations />\r\n                <div className=\"content\">\r\n                    <GneralInformationCity/>\r\n                    <div className=\"contentDetail\">\r\n                        <div className=\"sec1\">\r\n                            <Forecast/>\r\n                        </div>\r\n                        <div className=\"sec2\">\r\n                            <Details/>\r\n                            <WindPressure/>\r\n                            <Map/>\r\n                        </div>\r\n                                                                    \r\n                    </div>\r\n                      \r\n                </div>                   \r\n            </div>\r\n        );\r\n    \r\n};\r\n\r\nexport default Main;","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actionLocalStorage, getWeatherForecast } from '../../actions/actions'\r\n\r\n\r\n\r\nclass MyFavorites extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading:true,\r\n            localStorageList:  this.props.localStorageList  \r\n        }         \r\n    };\r\n\r\n\r\n    btnAddCity() {\r\n        let arr = this.state.localStorageList !== []? JSON.parse(this.state.localStorageList): [];\r\n        if (arr.some(x=> x===this.props.forecastAll.location.city)) return    \r\n        arr.push(this.props.forecastAll.location.city)\r\n        this.setState.localStorageList = JSON.stringify(arr)\r\n        this.props.actionLocalStorage(JSON.stringify(arr))\r\n    };\r\n    btnDeleteCity() {\r\n        let arr = JSON.parse(this.state.localStorageList)\r\n        let city = this.props.forecastAll.location.city\r\n        let  newArr = arr.filter(x=> x!==city)\r\n        this.setState.localStorageList = JSON.stringify(newArr)\r\n        this.props.actionLocalStorage(JSON.stringify(newArr))  \r\n    };\r\n\r\n    render() {\r\n        this.state.isLoading = this.props.isLoading\r\n        if(this.state.isLoading) return (<div><i className=\"fa fa-spinner fa-spin\"></i></div>)\r\n        console.log(this.props) \r\n\t\tthis.state.localStorageList =this.props.localStorageList\r\n        let arrCity =[]\r\n        if (this.state.localStorageList) {arrCity = JSON.parse(this.state.localStorageList)}\r\n        return (\r\n            <div className=\"myLocationsSearch\" key={Math.random()}>\r\n                \r\n                    <div className=\"favoritSearch divh2\">\r\n                        <h2>My Favorites</h2>\r\n                    </div>\r\n                    <p>Click the button to add cities to the list.</p>\r\n                    <div className=\"listCity\">                        \r\n                        <div className=\"btnSearch\" key={Math.random()}>\r\n                           \t<div className=\"divh2Search\"><button className=\"btnLocSearch\" onClick={this.btnAddCity.bind(this)}>Add</button></div>\r\n                            <div className=\"divh2Search\"><button className=\"btnLocSearch\" onClick={this.btnDeleteCity.bind(this)}>Delete</button></div>\r\n                        </div>\r\n                      <div className=\"favoritSearch citiesListSearch\" onClick = {(event)=> this.props.getWeatherForecast(event.target.innerText)}>{arrCity.map((x, i)=> <p className=\"linkWorldSearch\" key={Math.random()}>{x}</p>)}</div>\r\n                    </div>    \r\n                \r\n            </div>\r\n        )\r\n    };\r\n}\r\nlet mapStateToProps = state => ({forecastAll: state.forecastReducer.forecastAll, \r\n    timesOfDay: state.forecastReducer.timesOfDay, \r\n    isLoading: state.forecastReducer.isLoading,\r\n    localStorageList: state.localStorageReducer.localStorageList});\r\nlet mapDispatchToProps = {actionLocalStorage, getWeatherForecast};\r\nlet MyFavoritCitySearch = connect(mapStateToProps,mapDispatchToProps)(MyFavorites);\r\n\r\nexport default MyFavoritCitySearch;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport {Router, Route, Link, Switch} from 'react-router-dom';\nimport createHistory from \"history/createBrowserHistory\";\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome, faLongArrowAltDown } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\nimport Header from './components/componentsHeader/Header.js'\nimport Main from './components/componentsMain/Main'\nimport MyFavoritCitySearch from './components/componentsSearch/MyFavoritCitySearch'\n\nlibrary.add(faHome, faLongArrowAltDown)\n\nclass App extends Component {\n  render() {\n    return (     \n        <div className=\"App\">\n          <LinkRouter />\n        </div>\n     \n    );\n  }\n}\n\n\nclass LinkRouter extends Component {\n   render() {\n      return (\n         <Router history={createHistory()}>\n            <div>\n                <ul className='nav'>\n                    <li><Link to=\"/\"><FontAwesomeIcon icon=\"home\" className='home'/>Home</Link></li>\n                    <li><Link to='/searchCity'>Add cities to favorites</Link></li>\n                </ul>\n                <Switch>\n                  <Route exact path=\"/\" component={All} />               \n                  <Route exact path=\"/searchCity\" component={MyFavoritCity}/>                  \n                </Switch>\n            </div>\n         </Router>\n      ); \n    } \n  }\n\n\nclass All extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Header/>\n                <Main/>              \n            </div>\n        );\n    }\n}\n\n\nconst MyFavoritCity = () => {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <MyFavoritCitySearch/>              \n    </div>\n\n  )} \n\n\n\n\n\n\n\n\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n\nstore.subscribe(()=> {\n  console.log(store.getState()) \n});\n\n"],"sourceRoot":""}